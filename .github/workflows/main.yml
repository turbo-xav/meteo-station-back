# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [14.x]
        
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Meteo Station Installation

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo - It install dependencies with NPM : npm ci
          echo - It Build with npm run build
          echo - It Deploys build with SSH on server 
          echo - It Launch Server With PM2 Deamon process manager
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci
      - run: npm run build --if-present
      
      - name: Deploy to Server
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}          
          SOURCE: "/"
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          TARGET: ${{ secrets.REMOTE_TARGET }}
          EXCLUDE: "node_modules build .git"

      - name: Post Deploy
        uses: appleboy/ssh-action@master
        with:
            host: ${{ secrets.REMOTE_HOST }}
            username: ${{ secrets.REMOTE_USER }}
            key: ${{ secrets.SERVER_SSH_KEY }}
            port: 22
            script: | 
              cd ${{ secrets.REMOTE_TARGET }} 
              npm i 
              npm run build 
              chmod +x  ${{ secrets.REMOTE_TARGET }}/scripts/start.sh 
              ${{ secrets.REMOTE_TARGET }}/scripts/./start.sh
